import{M as y}from"./magnifying-glass-icon-Byy0RCby.js";import{X as _}from"./xmark-icon-dnrOEvj-.js";import{g as G,r as k,h as C,a,c as m,o as p,w as t,d as o,b as e,l as I,u as d,q,j as S,F as N,k as F,e as f,t as E}from"./index-Coy-oaSw.js";const P=G({__name:"TextInputGroup.story",setup(M){const u=k(""),l=k(""),g=C(["chip one","chip two","chip three","chip four","chip five","chip six","chip seven","chip eight","chip nine","chip ten","chip eleven","chip twelve","chip thirteen","chip fourteen"]);return(U,n)=>{const h=a("component-info"),s=a("pf-text-input-group-main"),r=a("pf-text-input-group"),c=a("story-canvas"),x=a("pf-button"),v=a("pf-text-input-group-utilities"),V=a("pf-chip"),T=a("pf-chip-group"),w=a("doc-page");return p(),m(w,{name:"Components/TextInputGroup.story.vue",title:"Text input group"},{description:t(()=>[...n[4]||(n[4]=[o("div",{class:"markdown pf-v6-c-content"},[o("p",null,[f("A "),o("strong",null,"text input group"),f(" is a more flexible composable version of a "),o("a",{href:"#/stories/components/text-input"},"text input"),f(". It enables consumers of PatternFly to build custom inputs for filtering and similar use cases by placing elements like icons, chips groups and buttons within a text input.")])],-1)])]),apidocs:t(()=>[e(h,{src:"packages/core/src/components/TextInputGroup/TextInputGroup.vue",doc:{name:"PfTextInputGroup",exportName:"default",displayName:"TextInputGroup",description:"",tags:{},props:[{name:"ouiaSafe",description:"Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false.",required:!1,type:{name:"boolean"}},{name:"ouiaId",description:"Value to overwrite the randomly generated data-ouia-component-id.",required:!1,type:{name:"OuiaId"}},{name:"disabled",description:"Adds disabled styling and a disabled context value which text input group main hooks into for the input itself",required:!1,type:{name:"boolean"}},{name:"plain",description:"Flag to indicate the toggle has no border or background",required:!1,type:{name:"boolean"}},{name:"validated",description:"Status variant of the text input group.",required:!1,type:{name:"union",elements:[{name:'"success"'},{name:'"warning"'},{name:'"error"'}]}}],slots:[{name:"default"}],sourceFiles:["../../packages/core/src/components/TextInputGroup/TextInputGroup.vue"]}}),e(h,{src:"packages/core/src/components/TextInputGroup/TextInputGroupMain.vue",doc:{name:"PfTextInputGroupMain",exportName:"default",displayName:"TextInputGroupMain",description:"",tags:{},expose:[{name:"input"},{name:"focus"}],props:[{name:"ouiaSafe",description:"Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false.",required:!1,type:{name:"boolean"}},{name:"ouiaId",description:"Value to overwrite the randomly generated data-ouia-component-id.",required:!1,type:{name:"OuiaId"}},{name:"type",description:"Type that the text input accepts.",required:!1,type:{name:"T"}},{name:"modelValue",description:"Value of the text input.",required:!1,type:{name:"union",elements:[{name:"string"},{name:"number"},{name:"null"}]},defaultValue:{func:!1,value:"undefined"}},{name:"modelModifiers",required:!1,type:{name:`{
  number?: N;
  trim?: boolean;
  lazy?: boolean;
}`}},{name:"validated",description:`Value to indicate if the text input is modified to show that validation state.
If set to success, text input will be modified to indicate valid state.
If set to error, text input will be modified to indicate error state.`,required:!1,type:{name:"InputValidateState"}},{name:"autoValidate",required:!1,type:{name:"union",elements:[{name:'""'},{name:'"blur"'},{name:'"input"'},{name:'"change"'},{name:'"enter"'},{name:"boolean"}]},defaultValue:{func:!1,value:"true"}},{name:"hint",description:"Suggestion that will show up like a placeholder even with text in the input",required:!1,type:{name:"string"}}],events:[{name:"change",type:{names:["Event"]},description:"Callback for when there is a change in the input field"},{name:"focus",type:{names:["FocusEvent"]},description:"Callback for when the input field is focused"},{name:"blur",type:{names:["FocusEvent"]},description:"Callback for when focus is lost on the input field"},{name:"input",type:{names:["Event"]}},{name:"invalid",type:{names:["Event"]}},{name:"keyup",type:{names:["KeyboardEvent"]}},{name:"update:modelValue",type:{names:["TSConditionalType"]},description:"Callback for when the model value changes"},{name:"update:validated",type:{names:["InputValidateState"]}}],slots:[{name:"default"},{name:"icon"}],sourceFiles:["../../packages/core/src/components/TextInputGroup/TextInputGroupMain.vue"]}}),e(h,{src:"packages/core/src/components/TextInputGroup/TextInputGroupUtilities.vue",doc:{name:"PfTextInputGroupUtilities",exportName:"default",displayName:"TextInputGroupUtilities",description:"",tags:{},props:[{name:"ouiaSafe",description:"Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false.",required:!1,type:{name:"boolean"}},{name:"ouiaId",description:"Value to overwrite the randomly generated data-ouia-component-id.",required:!1,type:{name:"OuiaId"}}],slots:[{name:"default"}],sourceFiles:["../../packages/core/src/components/TextInputGroup/TextInputGroupUtilities.vue"]}})]),default:t(()=>[n[5]||(n[5]=o("div",{class:"markdown pf-v6-c-content"},[o("h2",{class:"pf-v6-c-title"},"Examples")],-1)),e(c,{title:"Basic",source:`<pf-text-input-group>
  <pf-text-input-group-main />
</pf-text-input-group>`},{default:t(()=>[e(r,null,{default:t(()=>[e(s)]),_:1})]),_:1}),e(c,{title:"Disabled",source:`<pf-text-input-group disabled>
  <pf-text-input-group-main model-value="Disabled" aria-label="Disabled text input group example input" />
</pf-text-input-group>`},{default:t(()=>[e(r,{disabled:""},{default:t(()=>[e(s,{"model-value":"Disabled","aria-label":"Disabled text input group example input"})]),_:1})]),_:1}),e(c,{title:"Utilities and icon",source:`<pf-text-input-group>
  <pf-text-input-group-main v-model="inputValue">
    <template #icon>
      <magnifying-glass-icon />
    </template>
  </pf-text-input-group-main>
  <pf-text-input-group-utilities v-if="!!inputValue">
    <pf-button variant="plain" aria-label="Clear button and input" @click="inputValue = ''">
      <template #icon>
        <xmark-icon />
      </template>
    </pf-button>
  </pf-text-input-group-utilities>
</pf-text-input-group>`},{default:t(()=>[e(r,null,{default:t(()=>[e(s,{modelValue:u.value,"onUpdate:modelValue":n[0]||(n[0]=i=>u.value=i)},{icon:t(()=>[e(d(y))]),_:1},8,["modelValue"]),u.value?(p(),m(v,{key:0},{default:t(()=>[e(x,{variant:"plain","aria-label":"Clear button and input",onClick:n[1]||(n[1]=i=>u.value="")},{icon:t(()=>[e(d(_))]),_:1})]),_:1})):I("",!0)]),_:1})]),_:1}),e(c,{title:"Filters",source:`<pf-text-input-group>
  <pf-text-input-group-main v-model="inputValue2">
    <template v-if="!chips.length" #icon>
      <magnifying-glass-icon />
    </template>
    <pf-chip-group>
      <pf-chip v-for="(chip, index) in chips" :key="index" @click="chips.splice(index, 1)">{{ chip }}</pf-chip>
    </pf-chip-group>
  </pf-text-input-group-main>
  <pf-text-input-group-utilities v-if="!!inputValue2">
    <pf-button variant="plain" aria-label="Clear button and input" @click="inputValue2 = ''">
      <template #icon>
        <xmark-icon />
      </template>
    </pf-button>
  </pf-text-input-group-utilities>
</pf-text-input-group>`},{default:t(()=>[e(r,null,{default:t(()=>[e(s,{modelValue:l.value,"onUpdate:modelValue":n[2]||(n[2]=i=>l.value=i)},q({default:t(()=>[e(T,null,{default:t(()=>[(p(!0),S(N,null,F(g,(i,b)=>(p(),m(V,{key:b,onClick:D=>g.splice(b,1)},{default:t(()=>[f(E(i),1)]),_:2},1032,["onClick"]))),128))]),_:1})]),_:2},[g.length?void 0:{name:"icon",fn:t(()=>[e(d(y))]),key:"0"}]),1032,["modelValue"]),l.value?(p(),m(v,{key:0},{default:t(()=>[e(x,{variant:"plain","aria-label":"Clear button and input",onClick:n[3]||(n[3]=i=>l.value="")},{icon:t(()=>[e(d(_))]),_:1})]),_:1})):I("",!0)]),_:1})]),_:1})]),_:1})}}});export{P as default};
