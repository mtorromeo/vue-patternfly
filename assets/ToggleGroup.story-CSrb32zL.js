import{g as x,r as i,a as s,c as w,o as _,w as n,d as l,b as t,t as p,e as r,_ as S}from"./index-DK9vAQUq.js";const T={style:{"margin-bottom":"1em"}},V=x({__name:"ToggleGroup.story",setup(N){const u=i(!1),d=i([]),g=i(void 0),c=i(!1),m=i(!1),f=i(!1);return(k,e)=>{const y=s("component-info"),O=s("pf-switch"),a=s("pf-toggle-group-item"),v=s("pf-toggle-group"),b=s("story-canvas"),h=s("doc-page");return _(),w(h,{name:"Components/ToggleGroup.story.vue",title:"Toggle group"},{description:n(()=>e[6]||(e[6]=[r("A "),l("b",null,"toggle group",-1),r(" is a group of controls that can be used to quickly switch between actions or states.")])),apidocs:n(()=>[t(y,{src:"packages/core/src/components/ToggleGroup/ToggleGroup.vue",doc:{name:"PfToggleGroup",exportName:"default",displayName:"ToggleGroup",description:"",tags:{},props:[{name:"ouiaSafe",description:"Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false.",required:!1,type:{name:"boolean"}},{name:"ouiaId",description:"Value to overwrite the randomly generated data-ouia-component-id.",required:!1,type:{name:"OuiaId"}},{name:"compact",description:"Modifies the toggle group to include compact styling.",required:!1,type:{name:"boolean"}},{name:"disabled",description:"Disable all toggle group items under this component.",required:!1,type:{name:"boolean"}},{name:"modelValue",required:!1,type:{name:"union",elements:[{name:"T"},{name:"null"}]}}],events:[{name:"update:modelValue",type:{names:["T"]}}],slots:[{name:"default"}],sourceFiles:["../../packages/core/src/components/ToggleGroup/ToggleGroup.vue"]}}),t(y,{src:"packages/core/src/components/ToggleGroup/ToggleGroupItem.vue",doc:{name:"PfToggleGroupItem",exportName:"default",displayName:"ToggleGroupItem",description:"",tags:{},props:[{name:"ouiaSafe",description:"Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false.",required:!1,type:{name:"boolean"}},{name:"ouiaId",description:"Value to overwrite the randomly generated data-ouia-component-id.",required:!1,type:{name:"OuiaId"}},{name:"text",description:"Text rendered inside the toggle group item",required:!1,type:{name:"string"}},{name:"value",required:!1,type:{name:"T"}},{name:"disabled",description:"Flag indicating if the toggle group item is disabled",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"undefined"}},{name:"selected",description:"Flag indicating if the toggle group item is selected",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"undefined"}},{name:"ariaLabel",description:"required when icon is used with no supporting text",required:!1,type:{name:"string"}},{name:"buttonId",description:"Optional id for the button within the toggle group item",required:!1,type:{name:"string"}}],events:[{name:"click",type:{names:["PointerEvent"]}},{name:"update:selected",type:{names:["boolean"]}}],slots:[{name:"icon"},{name:"default"}],sourceFiles:["../../packages/core/src/components/ToggleGroup/ToggleGroupItem.vue"]}})]),default:n(()=>[e[8]||(e[8]=l("div",{class:"markdown pf-v5-c-content"},[l("h2",{class:"pf-v5-c-title"},"Examples")],-1)),t(b,{title:"Default with multiple selectable",source:`<div style="margin-bottom: 1em">
  <pf-switch v-model:checked="disabledAll" label="Disable all" />
</div>

<pf-toggle-group v-model="selectionSet" :disabled="disabledAll" aria-label="Default with multiple selectable">
  <pf-toggle-group-item text="Option 1" />
  <pf-toggle-group-item text="Option 2" value="Value of Option 2" />
  <pf-toggle-group-item text="Option 3" disabled />
</pf-toggle-group>

<pre>const selection = ref({{ JSON.stringify(selectionSet) }})</pre>`},{intro:n(()=>e[7]||(e[7]=[l("div",{class:"markdown pf-v5-c-content"},[l("p",null,[r("The "),l("code",null,"pf-toggle-group"),r(" behaves like a multi-selection when no "),l("code",null,"v-model"),r(" prop is passed or when its value is a javascript "),l("code",null,"Array"),r(".")])],-1)])),default:n(()=>[l("div",T,[t(O,{checked:u.value,"onUpdate:checked":e[0]||(e[0]=o=>u.value=o),label:"Disable all"},null,8,["checked"])]),t(v,{modelValue:d.value,"onUpdate:modelValue":e[1]||(e[1]=o=>d.value=o),disabled:u.value,"aria-label":"Default with multiple selectable"},{default:n(()=>[t(a,{text:"Option 1"}),t(a,{text:"Option 2",value:"Value of Option 2"}),t(a,{text:"Option 3",disabled:""})]),_:1},8,["modelValue","disabled"]),l("pre",null,"const selection = ref("+p(JSON.stringify(d.value))+")",1)]),_:1}),t(b,{title:"Default with single selectable",source:`<pf-toggle-group v-model="singleSelection" aria-label="Default with multiple selectable">
  <pf-toggle-group-item text="Option 1" />
  <pf-toggle-group-item text="Option 2" value="Value of Option 2" />
  <pf-toggle-group-item text="Option 3" />
</pf-toggle-group>

<pre>const singleSelection = ref({{ JSON.stringify(singleSelection) }})</pre>`},{default:n(()=>[t(v,{modelValue:g.value,"onUpdate:modelValue":e[2]||(e[2]=o=>g.value=o),"aria-label":"Default with multiple selectable"},{default:n(()=>[t(a,{text:"Option 1"}),t(a,{text:"Option 2",value:"Value of Option 2"}),t(a,{text:"Option 3"})]),_:1},8,["modelValue"]),l("pre",null,"const singleSelection = ref("+p(JSON.stringify(g.value))+")",1)]),_:1}),t(b,{title:"Unmanaged single selectable",source:`<pf-toggle-group aria-label="Default with multiple selectable">
  <pf-toggle-group-item v-model:selected="selected1" text="Option 1" />
  <pf-toggle-group-item v-model:selected="selected2" text="Option 2" />
  <pf-toggle-group-item v-model:selected="selected3" text="Option 3" />
</pf-toggle-group>

<pre>
  const selected1 = ref({{ JSON.stringify(selected1) }})
  const selected2 = ref({{ JSON.stringify(selected2) }})
  const selected3 = ref({{ JSON.stringify(selected3) }})
</pre>`},{default:n(()=>[t(v,{"aria-label":"Default with multiple selectable"},{default:n(()=>[t(a,{selected:c.value,"onUpdate:selected":e[3]||(e[3]=o=>c.value=o),text:"Option 1"},null,8,["selected"]),t(a,{selected:m.value,"onUpdate:selected":e[4]||(e[4]=o=>m.value=o),text:"Option 2"},null,8,["selected"]),t(a,{selected:f.value,"onUpdate:selected":e[5]||(e[5]=o=>f.value=o),text:"Option 3"},null,8,["selected"])]),_:1}),l("pre",null,"        const selected1 = ref("+p(JSON.stringify(c.value))+`)
        const selected2 = ref(`+p(JSON.stringify(m.value))+`)
        const selected3 = ref(`+p(JSON.stringify(f.value))+`)
      `,1)]),_:1})]),_:1})}}}),G=S(V,[["__scopeId","data-v-af35d9c3"]]);export{G as default};
