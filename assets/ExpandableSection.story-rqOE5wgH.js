import{f as _,r as m,a as n,o as p,c as y,w as e,b as a,d as t,i as f,F as g,e as v}from"./index-jISOFsdf.js";const w=v("b",null,"expandable section",-1),E=_({__name:"ExpandableSection.story",setup(S){const c=m(!1),d=m(!1);return(k,o)=>{const r=n("component-info"),l=n("pf-expandable-section"),i=n("story-canvas"),x=n("pf-stack-item"),u=n("pf-expandable-section-toggle"),h=n("pf-stack"),b=n("doc-page");return p(),y(b,{name:"Components/ExpandableSection.story.vue",title:"Expandable Section"},{description:e(()=>[a("An "),w,a(" component is used to support progressive disclosure in a form or page by hiding additional content when you don't want it to be shown by default. An expandable section can contain any type of content such as plain text, form inputs, and charts.")]),apidocs:e(()=>[t(r,{src:"packages/core/src/components/ExpandableSection/ExpandableSection.vue",doc:{name:"PfExpandableSection",exportName:"default",displayName:"ExpandableSection",description:"",tags:{},props:[{name:"expanded",description:"Flag to indicate if the content is expanded",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"undefined"}},{name:"toggleText",description:"Text that appears in the attached toggle",required:!1,type:{name:"string"}},{name:"toggleTextExpanded",description:"Text that appears in the attached toggle when expanded (will override toggleText if both are specified; used for uncontrolled expandable with dynamic toggle text)",required:!1,type:{name:"string"}},{name:"toggleTextCollapsed",description:"Text that appears in the attached toggle when collapsed (will override toggleText if both are specified; used for uncontrolled expandable with dynamic toggle text)",required:!1,type:{name:"string"}},{name:"active",description:"Forces active state",required:!1,type:{name:"boolean"}},{name:"detached",description:"Indicates the expandable section has a detached toggle",required:!1,type:{name:"boolean"}},{name:"contentId",description:"ID of the content of the expandable section",required:!1,type:{name:"string"}},{name:"large",description:"Flag for disclosure styling.",required:!1,type:{name:"boolean"}},{name:"widthLimited",description:"Flag to indicate the width of the component is limited. Set to true for disclosure styling.",required:!1,type:{name:"boolean"}}],events:[{name:"update:expanded",type:{names:["boolean"]}}],slots:[{name:"default"}],sourceFiles:["../../packages/core/src/components/ExpandableSection/ExpandableSection.vue"]}},null,8,["doc"]),t(r,{src:"packages/core/src/components/ExpandableSection/ExpandableSectionToggle.vue",doc:{name:"PfExpandableSectionToggle",exportName:"default",displayName:"ExpandableSectionToggle",description:"",tags:{},props:[{name:"expanded",description:"Flag to indicate if the content is expanded",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"undefined"}},{name:"contentId",description:"ID of the content of the expandable section",required:!1,type:{name:"string"}},{name:"direction",description:"Direction the toggle arrow should point when the expandable section is expanded.",required:!1,type:{name:"union",elements:[{name:'"up"'},{name:'"down"'}]},defaultValue:{func:!1,value:"'down'"}}],events:[{name:"update:expanded",type:{names:["boolean"]}}],slots:[{name:"default"}],sourceFiles:["../../packages/core/src/components/ExpandableSection/ExpandableSectionToggle.vue"]}},null,8,["doc"])]),default:e(()=>[t(i,{title:"Basic",source:`<pf-expandable-section v-model:expanded="expanded1" toggle-text-expanded="Show less" toggle-text-collapsed="Show more">
  This content is visible only when the component is expanded.
</pf-expandable-section>`},{default:e(()=>[t(l,{expanded:c.value,"onUpdate:expanded":o[0]||(o[0]=s=>c.value=s),"toggle-text-expanded":"Show less","toggle-text-collapsed":"Show more"},{default:e(()=>[a(" This content is visible only when the component is expanded. ")]),_:1},8,["expanded"])]),_:1}),t(i,{title:"Managed",source:`<pf-expandable-section toggle-text-expanded="Show less" toggle-text-collapsed="Show more">
  This content is visible only when the component is expanded.
</pf-expandable-section>`},{default:e(()=>[t(l,{"toggle-text-expanded":"Show less","toggle-text-collapsed":"Show more"},{default:e(()=>[a(" This content is visible only when the component is expanded. ")]),_:1})]),_:1}),t(i,{title:"Detached",source:`<pf-stack gutter>
  <pf-stack-item>
    <pf-expandable-section v-model:expanded="expanded2" detached content-id="detached-toggle-content">
      This content is visible only when the component is expanded.
    </pf-expandable-section>
  </pf-stack-item>
  <pf-stack-item>
    <pf-expandable-section-toggle v-model:expanded="expanded2" direction="up" content-id="detached-toggle-content">
      <template v-if="expanded2">Show less</template>
      <template v-else>Show more</template>
    </pf-expandable-section-toggle>
  </pf-stack-item>
</pf-stack>`},{default:e(()=>[t(h,{gutter:""},{default:e(()=>[t(x,null,{default:e(()=>[t(l,{expanded:d.value,"onUpdate:expanded":o[1]||(o[1]=s=>d.value=s),detached:"","content-id":"detached-toggle-content"},{default:e(()=>[a(" This content is visible only when the component is expanded. ")]),_:1},8,["expanded"])]),_:1}),t(x,null,{default:e(()=>[t(u,{expanded:d.value,"onUpdate:expanded":o[2]||(o[2]=s=>d.value=s),direction:"up","content-id":"detached-toggle-content"},{default:e(()=>[d.value?(p(),f(g,{key:0},[a("Show less")],64)):(p(),f(g,{key:1},[a("Show more")],64))]),_:1},8,["expanded"])]),_:1})]),_:1})]),_:1})]),_:1},8,["name"])}}});export{E as default};
