import{g as v,r as o,a as u,c as b,o as y,w as n,d as r,b as t,e as m}from"./index--PMAKewJ.js";const A=v({__name:"SearchInput.story",setup(g){const d=o(""),i=o(""),c=o(""),p=o("username:player firstname:john");return(S,e)=>{const f=u("component-info"),l=u("pf-search-input"),s=u("story-canvas"),h=u("doc-page");return y(),b(h,{name:"Components/SearchInput.story.vue",title:"Search input"},{description:n(()=>e[8]||(e[8]=[r("div",{class:"markdown pf-v5-c-content"},[r("p",null,[m("A "),r("strong",null,"search input"),m(" is a type of input field that can be user to search, find, or filter. See "),r("a",{href:"https://v5-archive.patternfly.org/guidelines/filters"},"filter guidelines"),m(" for more information on using search input as a filter.")])],-1)])),apidocs:n(()=>[t(f,{src:"packages/core/src/components/SearchInput/AdvancedSearchMenu.vue",doc:{name:"PfAdvancedSearchMenu",exportName:"default",displayName:"AdvancedSearchMenu",description:"",tags:{},props:[{name:"searchMenuOpen",description:"Flag for toggling the open/close state of the advanced search menu.",required:!1,type:{name:"boolean"}},{name:"resetButtonLabel",description:"Label for the button which resets the advanced search form and clears the search input.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'Reset'"}},{name:"submitSearchButtonLabel",description:"Label for the button which calls the onSearch event handler.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'Search'"}},{name:"attributes",description:"Array of attribute values used for dynamically generated advanced search.",required:!1,type:{name:"Array",elements:[{name:"TSParenthesizedType"}]},defaultValue:{func:!1,value:"(): (string | SearchAttribute)[] => []"}},{name:"advancedSearchDelimiter",description:`Delimiter in the query string for pairing attributes with search values.
Required whenever attributes are passed as props.`,required:!1,type:{name:"string"}},{name:"onClear",description:"A callback for when the user clicks the clear button.",required:!1,type:{name:"TSFunctionType"}},{name:"getAttrValueMap",description:"Function which builds an attribute-value map by parsing the value in the search input.",required:!1,type:{name:"TSFunctionType"}}],events:[{name:"search",type:{names:["string"]},description:"A callback for when the search button is clicked."},{name:"toggle-advanced-menu",type:{names:["Event"]},description:"A callback for when the open advanced search button is clicked."}],slots:[{name:"`attribute:${attribute.attr}`",scoped:!0,bindings:[{name:"name",title:"binding"}]},{name:"words-attr-label"},{name:"default"}],sourceFiles:["../../packages/core/src/components/SearchInput/AdvancedSearchMenu.vue"]}}),t(f,{src:"packages/core/src/components/SearchInput/SearchInput.vue",doc:{name:"PfSearchInput",exportName:"default",displayName:"SearchInput",description:"",tags:{},props:[{name:"ouiaSafe",description:"Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false.",required:!1,type:{name:"boolean"}},{name:"ouiaId",description:"Value to overwrite the randomly generated data-ouia-component-id.",required:!1,type:{name:"OuiaId"}},{name:"disabled",description:"Flag indicating if search input is disabled.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"ariaLabel",description:"An accessible label for the search input.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'Search input'"}},{name:"placeholder",description:"Placeholder text of the search input.",required:!1,type:{name:"string"}},{name:"hint",description:"A suggestion for autocompleting.",required:!1,type:{name:"string"}},{name:"type",description:"Type of the input",required:!1,type:{name:"union",elements:[{name:'"text"'},{name:'"date"'},{name:'"datetime-local"'},{name:'"email"'},{name:'"month"'},{name:'"number"'},{name:'"password"'},{name:'"search"'},{name:'"tel"'},{name:'"time"'},{name:'"url"'}]},defaultValue:{func:!1,value:"'text'"}},{name:"zIndex",description:"z-index of the advanced search form when appendTo is not inline.",required:!1,type:{name:"number"}},{name:"resetButtonLabel",description:"Label for the button which resets the advanced search form and clears the search input.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'Reset'"}},{name:"submitSearchButtonLabel",description:"Label for the button which calls the onSearch event handler.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'Search'"}},{name:"openMenuButtonAriaLabel",description:"Accessible label for the button which opens the advanced search form menu.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'Open advanced search'"}},{name:"previousNavigationButtonAriaLabel",description:"Accessible label for the button to navigate to previous result.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'Previous'"}},{name:"previousNavigationButtonDisabled",description:"Flag indicating if the previous navigation button is disabled.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"nextNavigationButtonAriaLabel",description:"Accessible label for the button to navigate to next result.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'Next'"}},{name:"nextNavigationButtonDisabled",description:"Flag indicating if the next navigation button is disabled.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"resultsCount",description:`The number of search results returned. Either a total number of results,
or a string representing the current result over the total number of results. i.e. "1 / 5".`,required:!1,type:{name:"union",elements:[{name:"number"},{name:"string"}]}},{name:"attributes",description:"Array of attribute values used for dynamically generated advanced search.",required:!1,type:{name:"union",elements:[{name:"Array",elements:[{name:"string"}]},{name:"Array",elements:[{name:"SearchAttribute"}]}]},defaultValue:{func:!1,value:"() => []"}},{name:"expandable",required:!1,type:{name:"boolean"}},{name:"expandButtonAriaLabel",required:!1,type:{name:"string"}},{name:"advancedSearchDelimiter",description:`Delimiter in the query string for pairing attributes with search values.
Required whenever attributes are passed as props.`,required:!1,type:{name:"string"}},{name:"appendTo",description:`The container to append the menu to.
If your menu is being cut off you can append it to an element higher up the DOM tree.
Some examples:
append-to="body"
append-to="#element-id"`,required:!1,type:{name:"union",elements:[{name:'"inline"'},{name:"string"},{name:"RendererElement"},{name:"null"}]}},{name:"onClear",description:"A callback for when the user clicks the clear button.",required:!1,type:{name:"TSFunctionType"}},{name:"onNextClick",description:"A callback for when the user clicks to navigate to next result.",required:!1,type:{name:"TSFunctionType"}},{name:"onPreviousClick",description:"A callback for when the user clicks to navigate to previous result.",required:!1,type:{name:"TSFunctionType"}},{name:"onToggleAdvancedSearch",description:"A callback for when the open advanced search button is clicked.",required:!1,type:{name:"TSFunctionType"}},{name:"onSearch",description:"A callback for when the search button is clicked.",required:!1,type:{name:"TSFunctionType"}}],slots:[{name:"words-attr-label"},{name:"form-additional-items"}],sourceFiles:["../../packages/core/src/components/SearchInput/SearchInput.vue"]}})]),default:n(()=>[e[10]||(e[10]=r("div",{class:"markdown pf-v5-c-content"},[r("h2",{class:"pf-v5-c-title"},"Examples")],-1)),t(s,{title:"Basic",source:`<pf-search-input
v-model="filter"
placeholder="Find by name"
@clear="filter = ''" />`},{default:n(()=>[t(l,{modelValue:d.value,"onUpdate:modelValue":e[0]||(e[0]=a=>d.value=a),placeholder:"Find by name",onClear:e[1]||(e[1]=a=>d.value="")},null,8,["modelValue"])]),_:1}),t(s,{title:"Match with result count",source:`<pf-search-input
v-model="filter2"
placeholder="Find by name"
:results-count="[...filter2.matchAll(/[a-z]/g)].length"
@clear="filter2 = ''" />`},{default:n(()=>[t(l,{modelValue:i.value,"onUpdate:modelValue":e[2]||(e[2]=a=>i.value=a),placeholder:"Find by name","results-count":[...i.value.matchAll(/[a-z]/g)].length,onClear:e[3]||(e[3]=a=>i.value="")},null,8,["modelValue","results-count"])]),_:1}),t(s,{title:"With expandable button",source:`<pf-search-input
v-model="filter3"
expandable
@clear="filter3 = ''" />`},{default:n(()=>[t(l,{modelValue:c.value,"onUpdate:modelValue":e[4]||(e[4]=a=>c.value=a),expandable:"",onClear:e[5]||(e[5]=a=>c.value="")},null,8,["modelValue"])]),_:1}),t(s,{title:"Advanced",source:`<pf-search-input
v-model="filter4"
:attributes="[
  { attr: 'username', display: 'Username' },
  { attr: 'firstname', display: 'First name' }
]"
advanced-search-delimiter=":"
placeholder="Find by name"
@search="void(0)"
@clear="filter4 = ''" />`},{intro:n(()=>e[9]||(e[9]=[r("div",{class:"markdown pf-v5-c-content"},[r("p",null,"The search input component can be used to dynamically build a one to one attribute-value advanced search. Using the attributes prop alongside the advancedSearchDelimiter will expose this functionality, as demonstrated in the following example. The search input component can also be used as a composable component and paired with a Popper or other elements to build a completely custom advanced search form.")],-1)])),default:n(()=>[t(l,{modelValue:p.value,"onUpdate:modelValue":e[6]||(e[6]=a=>p.value=a),attributes:[{attr:"username",display:"Username"},{attr:"firstname",display:"First name"}],"advanced-search-delimiter":":",placeholder:"Find by name",onSearch:a=>{},onClear:e[7]||(e[7]=a=>p.value="")},null,8,["modelValue"])]),_:1})]),_:1,__:[10]})}}});export{A as default};
